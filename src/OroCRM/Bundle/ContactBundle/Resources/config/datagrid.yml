datagrid:
    # contact groups grid, shown on orocrm_contact_group_index
    contact-groups-grid:
        source:
            type: orm
            acl_resource: orocrm_contact_group_view
            query:
                select:
                    - g.id
                    - g.label
                from:
                  - { table: %orocrm_contact.group.entity.class%, alias: g }
        columns:
            label:
                label: Label
        properties:
            id: ~
            update_link:
                type:       url
                route:      orocrm_contact_group_update
                params:     [ id ]
            delete_link:
                type:       url
                route:      oro_api_delete_contactgroup
                params:     [ id ]
        sorters:
            columns:
                label:
                    data_name: g.label
        filters:
            columns:
                label:
                    label:     Label
                    data_name: g.label
                    type:      string
        actions:
            update:
                type:          navigate
                acl_resource:  orocrm_contact_group_update
                label:         Update
                icon:          edit
                link:          update_link
                rowAction:     true
            delete:
                type:          delete
                acl_resource:  orocrm_contact_group_delete
                label:         Delete
                icon:          trash
                link:          delete_link
        options:
            entityHint: group
    # contacts assigned to group, shown on orocrm_contact_group_update route
    contact-group-contacts-grid:
        source:
            type: orm
            acl_resource: orocrm_contact_view
            query:
                select:
                    - c.id
                    - c.firstName
                    - c.lastName
                    - >
                      (CASE WHEN (:group IS NOT NULL) THEN
                        CASE WHEN (:group MEMBER OF c.groups OR c.id IN (:data_in)) AND c.id NOT IN (:data_not_in)
                        THEN true ELSE false END
                      ELSE
                        CASE WHEN c.id IN (:data_in) AND c.id NOT IN (:data_not_in)
                        THEN true ELSE false END
                      END) as hasGroup
                from:
                    - { table: %orocrm_contact.entity.class%, alias: c }
        columns:
            hasGroup:
                label: Has group
                editable: true
                frontend_type: boolean
            firstName:
                label: orocrm.contact.datagrid.first_name
            lastName: ~
        filters:
            columns:
                hasGroup:
                    filter_by_having: true
                    data_name: hasGroup
                    type:  boolean
                    label: Has group
                firstName:
                    type: string
                    data_name: c.firstName
                    label: orocrm.contact.datagrid.first_name
                lastName:
                    type: string
                    data_name: c.firstName
                    label: orocrm.contact.datagrid.last_name
        sorters:
            columns:
                hasGroup:
                    data_name: hasGroup
                firstName:
                    data_name: c.firstName
                lastName:
                    data_name: c.lastName
            default:
                hasGroup: %oro_datagrid.extension.orm_sorter.class%::DIRECTION_DESC
        options:
            entityHint: contact
