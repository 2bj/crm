{% extends 'OroUIBundle:actions:view.html.twig' %}
{% import 'OroUIBundle::macros.html.twig' as macros %}
{% import 'OroAddressBundle:Include:viewMacro.html.twig' as addressView %}
{% oro_title_set({params : {"%contact.name%": entity.__toString} }) %}
{% set gridId = 'accounts-grid' %}
{% block head_script %}
    {{ parent() }}
    {% placeholder prepare_grid with {'datagrid': datagrid, 'selector': '#' ~ gridId} %}
{% endblock %}

{% block navButtons %}
    {{ UI.button({'path' : path('orocrm_contact_index'), 'iClass' : 'icon-chevron-left ', 'title' : 'Back', 'label' : 'Back'}) }}
    {% if resource_granted('orocrm_contact_update') %}
        {{ UI.button({'path' : path('orocrm_contact_update', { 'id': entity.id }), 'iClass' : 'icon-edit ', 'title' : 'Update contact', 'label' : 'Edit'}) }}
    {% endif %}
    {% if resource_granted('orocrm_contact_delete') %}
        {{ UI.deleteButton({
                'dataUrl': path('oro_api_delete_contact', {'id': entity.id}) ,
                'dataRedirect': path('orocrm_contact_index'),
                'aCss': 'no-hash remove-button',
                'id': 'btn-remove-contact',
                'dataId': entity.id,
                'dataMessage': 'Are you sure you want to delete this contact?',
                'title': 'Delete Contact',
                'label': 'Delete'
            })
        }}
    {% endif %}
{% endblock navButtons %}

{% block pageHeader %}
    {% set breadcrumbs = {'entity': entity, 'indexPath': path('orocrm_contact_index'), 'indexLabel': 'Contacts', 'entityTitle': entity.__toString } %}
    {{ parent() }}
{% endblock pageHeader %}

{% block content_data %}
    {% set id = 'navbarContactsUpdate' %}
    {% set attributes = {} %}
    {% for value in entity|getAttributes(['address'], true) %}
        {% set attributes = attributes | merge([UI.flexibleAttributeRow(value)]) %}
    {% endfor %}

    {% set addresses = [] %}
    {% set yesNoChoices = {'0': 'No'|trans({}), '1': 'Yes'|trans({})} %}
    {% for addressValue in entity.multiAddress %}
        {% set primaryData = attribute(addressValue, 'primary') %}
        {% set primaryData = yesNoChoices[primaryData]|default('No'|trans({})) %}
        {% set addresses = addresses|merge([
            addressView.renderAddressView(addressValue, [{'label': 'Type', 'data': 'type'}]),
            addressView.renderAddressView(addressValue, [{'label': 'Primary', 'value': primaryData, 'defaultValue': 'No'|trans({})}]),
            addressView.renderAddress(addressValue),
            '<hr/>'
        ]) %}
    {% endfor %}

    {% set dataBlocks =
            [
                {
                    'title': 'General',
                    'class': 'active',
                    'subblocks': [
                        {
                            'title': 'Basic Information',
                            'data': attributes
                        },
                        {
                            'title': 'Addresses',
                            'data': addresses
                        },
                    ]
                }
            ]
    %}
    {% set dataBlocks = dataBlocks|merge([{'title' : 'Accounts', 'subblocks': [{'title' : null, 'data' : [UI.gridBlock(gridId)]}] }])%}
    {% set data =
        {
            'dataBlocks': dataBlocks,
        }
    %}
    {{ parent() }}
{% endblock content_data %}
